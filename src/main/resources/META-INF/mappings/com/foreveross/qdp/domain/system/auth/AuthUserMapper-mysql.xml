<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="AuthUser">
	<resultMap id="AuthUser" type="com.foreveross.qdp.domain.system.auth.AuthUser">
        <id     property="id"          column="ID"/>                        
        <result property="name"        column="NAME"/>                      
        <result property="status"      column="STATUS"/>                    
        <result property="type"        column="TYPE"/>                      
        <result property="tel"         column="TEL"/>                       
        <result property="email"       column="EMAIL"/>                     
        <result property="sex"         column="SEX"/>                       
        <result property="birthday"    column="BIRTHDAY"/>                  
        <result property="familyAddr"  column="FAMILY_ADDR"/>               
        <result property="workAddr"    column="WORK_ADDR"/>                 
        <result property="workTel"     column="WORK_TEL"/>                  
        <result property="description" column="DESCRIPTION"/>               
        <result property="updateTime"  column="UPDATE_TIME"/>               
        <result property="createTime"  column="CREATE_TIME"/>               

	</resultMap>
	<sql id="orderBy">
		<if test="page !=null and page.orderBy!=null">
			<bind name="fieldColMap" value="#{
           'ID'          : 'ID'         ,
           'NAME'        : 'NAME'       ,
           'STATUS'      : 'STATUS'     ,
           'TYPE'        : 'TYPE'       ,
           'TEL'         : 'TEL'        ,
           'EMAIL'       : 'EMAIL'      ,
           'SEX'         : 'SEX'        ,
           'BIRTHDAY'    : 'BIRTHDAY'   ,
           'FAMILYADDR'  : 'FAMILY_ADDR',
           'FAMILY_ADDR' : 'FAMILY_ADDR',
           'WORKADDR'    : 'WORK_ADDR'  ,
           'WORK_ADDR'   : 'WORK_ADDR'  ,
           'WORKTEL'     : 'WORK_TEL'   ,
           'WORK_TEL'    : 'WORK_TEL'   ,
           'DESCRIPTION' : 'DESCRIPTION',
           'UPDATETIME'  : 'UPDATE_TIME',
           'UPDATE_TIME' : 'UPDATE_TIME',
           'CREATETIME'  : 'CREATE_TIME',
           'CREATE_TIME' : 'CREATE_TIME'

			}"/>
			<bind name="orderMap" value="#{'ASC':'ASC', 'DESC':'DESC'}"/>
			<trim prefix="order by " suffixOverrides=",">
				<foreach item="item" index="index" collection="page.orderBy" separator=",">
					<if test="item != null and item.name !=null and (fieldColMap[item.name.toUpperCase()] != null or orderMap[item.order.toUpperCase()]!=null)">${aliasDot}${fieldColMap[item.name.toUpperCase()]} ${orderMap[item.order.toUpperCase()]}</if>
				</foreach>
			</trim>
		</if>
	</sql>
	<select id="getAuthUserById" parameterType="com.foreveross.qdp.domain.system.auth.AuthUser" resultMap="AuthUser">
		SELECT * 
		FROM AUTH_USER
		<where>
				AND ID = #{id,jdbcType=VARCHAR}
		</where>
	</select>
	<select id="getAuthUserMapById" parameterType="com.foreveross.qdp.domain.system.auth.AuthUser" resultType="hashmap">
		SELECT 
           AuthUser.ID           AS  id                  ,
           AuthUser.NAME         AS  name                ,
           AuthUser.STATUS       AS  status              ,
           AuthUser.TYPE         AS  type                ,
           AuthUser.TEL          AS  tel                 ,
           AuthUser.EMAIL        AS  email               ,
           AuthUser.SEX          AS  sex                 ,
           AuthUser.BIRTHDAY     AS  birthday            ,
           AuthUser.FAMILY_ADDR  AS  familyAddr          ,
           AuthUser.WORK_ADDR    AS  workAddr            ,
           AuthUser.WORK_TEL     AS  workTel             ,
           AuthUser.DESCRIPTION  AS  description         ,
           AuthUser.UPDATE_TIME  AS  updateTime          ,
           AuthUser.CREATE_TIME  AS  createTime          

		FROM AUTH_USER AuthUser

		<where>
				AND authUser.ID = #{id,jdbcType=VARCHAR}
		</where>
	</select>
	<select id="pageFindAuthUser" resultMap="AuthUser">
		SELECT *
		FROM AUTH_USER
		<where>
           <if test="vo!=null and vo.id != null and vo.id != ''                   "> AND ID = #{vo.id,jdbcType=VARCHAR} </if>                              
           <if test="vo!=null and vo.name != null and vo.name != ''               "> AND NAME LIKE CONCAT('%',#{vo.name,jdbcType=VARCHAR},'%') </if>       
           <if test="vo!=null and vo.status != null and vo.status != ''           "> AND STATUS LIKE CONCAT('%',#{vo.status,jdbcType=VARCHAR},'%') </if>   
           <if test="vo!=null and vo.type != null and vo.type != ''               "> AND TYPE = #{vo.type,jdbcType=VARCHAR} </if>                          
           <if test="vo!=null and vo.tel != null and vo.tel != ''                 "> AND TEL = #{vo.tel,jdbcType=VARCHAR} </if>                            
           <if test="vo!=null and vo.email != null and vo.email != ''             "> AND EMAIL LIKE CONCAT('%',#{vo.email,jdbcType=VARCHAR},'%') </if>     
           <if test="vo!=null and vo.sex != null and vo.sex != ''                 "> AND SEX LIKE CONCAT('%',#{vo.sex,jdbcType=VARCHAR},'%') </if>         
           <if test="vo!=null and vo.birthday != null and vo.birthday != ''       "> AND BIRTHDAY = #{vo.birthday,jdbcType=VARCHAR} </if>                  
           <if test="vo!=null and vo.familyAddr != null and vo.familyAddr != ''   "> AND FAMILY_ADDR = #{vo.familyAddr,jdbcType=VARCHAR} </if>             
           <if test="vo!=null and vo.workAddr != null and vo.workAddr != ''       "> AND WORK_ADDR = #{vo.workAddr,jdbcType=VARCHAR} </if>                 
           <if test="vo!=null and vo.workTel != null and vo.workTel != ''         "> AND WORK_TEL = #{vo.workTel,jdbcType=VARCHAR} </if>                   
           <if test="vo!=null and vo.description != null and vo.description != '' "> AND DESCRIPTION = #{vo.description,jdbcType=VARCHAR} </if>            
           <if test="vo!=null and vo.updateTime != null and vo.updateTime != ''   "> AND UPDATE_TIME = #{vo.updateTime,jdbcType=VARCHAR} </if>             
           <if test="vo!=null and vo.createTime != null and vo.createTime != ''   "> AND CREATE_TIME = #{vo.createTime,jdbcType=VARCHAR} </if>             

		</where>
		<bind name="aliasDot" value="''"/><include refid="orderBy"/>
	</select>
	<select id="pageFindAuthUserMap" resultType="hashmap">
		SELECT 
           AuthUser.ID           AS  id                  ,
           AuthUser.NAME         AS  name                ,
           AuthUser.STATUS       AS  status              ,
           AuthUser.TYPE         AS  type                ,
           AuthUser.TEL          AS  tel                 ,
           AuthUser.EMAIL        AS  email               ,
           AuthUser.SEX          AS  sex                 ,
           AuthUser.BIRTHDAY     AS  birthday            ,
           AuthUser.FAMILY_ADDR  AS  familyAddr          ,
           AuthUser.WORK_ADDR    AS  workAddr            ,
           AuthUser.WORK_TEL     AS  workTel             ,
           AuthUser.DESCRIPTION  AS  description         ,
           AuthUser.UPDATE_TIME  AS  updateTime          ,
           AuthUser.CREATE_TIME  AS  createTime          

		FROM AUTH_USER AuthUser

		<where>
           <if test="vo!=null and vo.id != null and vo.id != ''                   "> AND AuthUser.ID = #{vo.id,jdbcType=VARCHAR} </if>                     
           <if test="vo!=null and vo.name != null and vo.name != ''               "> AND AuthUser.NAME LIKE CONCAT('%',#{vo.name,jdbcType=VARCHAR},'%') </if>
           <if test="vo!=null and vo.status != null and vo.status != ''           "> AND AuthUser.STATUS LIKE CONCAT('%',#{vo.status,jdbcType=VARCHAR},'%') </if>
           <if test="vo!=null and vo.type != null and vo.type != ''               "> AND AuthUser.TYPE = #{vo.type,jdbcType=VARCHAR} </if>                 
           <if test="vo!=null and vo.tel != null and vo.tel != ''                 "> AND AuthUser.TEL = #{vo.tel,jdbcType=VARCHAR} </if>                   
           <if test="vo!=null and vo.email != null and vo.email != ''             "> AND AuthUser.EMAIL LIKE CONCAT('%',#{vo.email,jdbcType=VARCHAR},'%') </if>
           <if test="vo!=null and vo.sex != null and vo.sex != ''                 "> AND AuthUser.SEX LIKE CONCAT('%',#{vo.sex,jdbcType=VARCHAR},'%') </if>
           <if test="vo!=null and vo.birthday != null and vo.birthday != ''       "> AND AuthUser.BIRTHDAY = #{vo.birthday,jdbcType=VARCHAR} </if>         
           <if test="vo!=null and vo.familyAddr != null and vo.familyAddr != ''   "> AND AuthUser.FAMILY_ADDR = #{vo.familyAddr,jdbcType=VARCHAR} </if>    
           <if test="vo!=null and vo.workAddr != null and vo.workAddr != ''       "> AND AuthUser.WORK_ADDR = #{vo.workAddr,jdbcType=VARCHAR} </if>        
           <if test="vo!=null and vo.workTel != null and vo.workTel != ''         "> AND AuthUser.WORK_TEL = #{vo.workTel,jdbcType=VARCHAR} </if>          
           <if test="vo!=null and vo.description != null and vo.description != '' "> AND AuthUser.DESCRIPTION = #{vo.description,jdbcType=VARCHAR} </if>   
           <if test="vo!=null and vo.updateTime != null and vo.updateTime != ''   "> AND AuthUser.UPDATE_TIME = #{vo.updateTime,jdbcType=VARCHAR} </if>    
           <if test="vo!=null and vo.createTime != null and vo.createTime != ''   "> AND AuthUser.CREATE_TIME = #{vo.createTime,jdbcType=VARCHAR} </if>    

		</where>
		<bind name="aliasDot" value="'AuthUser.'"/><include refid="orderBy"/>
	</select>
	<insert id="insertAuthUser" parameterType="com.foreveross.qdp.domain.system.auth.AuthUser"  useGeneratedKeys="true" keyProperty="id" >
		INSERT INTO AUTH_USER
			( ID, NAME, STATUS, TYPE, TEL, EMAIL, SEX, BIRTHDAY, FAMILY_ADDR, WORK_ADDR, WORK_TEL, DESCRIPTION, UPDATE_TIME, CREATE_TIME )
		VALUES
			(
           #{id,jdbcType=VARCHAR},
           #{name,jdbcType=VARCHAR},
           #{status,jdbcType=VARCHAR},
           #{type,jdbcType=VARCHAR},
           #{tel,jdbcType=VARCHAR},
           #{email,jdbcType=VARCHAR},
           #{sex,jdbcType=VARCHAR},
           #{birthday,jdbcType=VARCHAR},
           #{familyAddr,jdbcType=VARCHAR},
           #{workAddr,jdbcType=VARCHAR},
           #{workTel,jdbcType=VARCHAR},
           #{description,jdbcType=VARCHAR},
           #{updateTime,jdbcType=VARCHAR},
           #{createTime,jdbcType=VARCHAR}

			)
	</insert>
	<update id="updateAuthUser" parameterType="com.foreveross.qdp.domain.system.auth.AuthUser">
		UPDATE AUTH_USER
		<set>
           <if test="id != null         "> ID = #{id,jdbcType=VARCHAR},</if>
           <if test="name != null       "> NAME = #{name,jdbcType=VARCHAR},</if>
           <if test="status != null     "> STATUS = #{status,jdbcType=VARCHAR},</if>
           <if test="type != null       "> TYPE = #{type,jdbcType=VARCHAR},</if>
           <if test="tel != null        "> TEL = #{tel,jdbcType=VARCHAR},</if>
           <if test="email != null      "> EMAIL = #{email,jdbcType=VARCHAR},</if>
           <if test="sex != null        "> SEX = #{sex,jdbcType=VARCHAR},</if>
           BIRTHDAY = #{birthday,jdbcType=VARCHAR},                              
           FAMILY_ADDR = #{familyAddr,jdbcType=VARCHAR},                              
           WORK_ADDR = #{workAddr,jdbcType=VARCHAR},                              
           WORK_TEL = #{workTel,jdbcType=VARCHAR},                              
           DESCRIPTION = #{description,jdbcType=VARCHAR},                              
           <if test="updateTime != null "> UPDATE_TIME = #{updateTime,jdbcType=VARCHAR},</if>
           <if test="createTime != null "> CREATE_TIME = #{createTime,jdbcType=VARCHAR},</if>

		</set>
		<where>
				AND ID = #{id,jdbcType=VARCHAR}
		</where>
	</update>
	<delete id="deleteAuthUser" parameterType="com.foreveross.qdp.domain.system.auth.AuthUser">
		DELETE FROM AUTH_USER
		<where>
				AND ID = #{id,jdbcType=VARCHAR}
		</where>
	</delete>
	<select id="getAuthUserByName" parameterType="com.foreveross.qdp.domain.system.auth.AuthUser" resultMap="AuthUser">
		SELECT * 
		FROM AUTH_USER
		<where>
			NAME = #{name,jdbcType=VARCHAR}
		</where>
	</select>
	<select id="getAuthUserMapByName" parameterType="com.foreveross.qdp.domain.system.auth.AuthUser" resultType="hashmap">
		SELECT 
           AuthUser.ID           AS  id                  ,
           AuthUser.NAME         AS  name                ,
           AuthUser.STATUS       AS  status              ,
           AuthUser.TYPE         AS  type                ,
           AuthUser.TEL          AS  tel                 ,
           AuthUser.EMAIL        AS  email               ,
           AuthUser.SEX          AS  sex                 ,
           AuthUser.BIRTHDAY     AS  birthday            ,
           AuthUser.FAMILY_ADDR  AS  familyAddr          ,
           AuthUser.WORK_ADDR    AS  workAddr            ,
           AuthUser.WORK_TEL     AS  workTel             ,
           AuthUser.DESCRIPTION  AS  description         ,
           AuthUser.UPDATE_TIME  AS  updateTime          ,
           AuthUser.CREATE_TIME  AS  createTime          

		FROM AUTH_USER AuthUser

		<where>
			NAME = #{name,jdbcType=VARCHAR}
		</where>
	</select>
	<select id="getAuthUserByEmail" parameterType="com.foreveross.qdp.domain.system.auth.AuthUser" resultMap="AuthUser">
		SELECT * 
		FROM AUTH_USER
		<where>
			EMAIL = #{email,jdbcType=VARCHAR}
		</where>
	</select>
	<select id="getAuthUserMapByEmail" parameterType="com.foreveross.qdp.domain.system.auth.AuthUser" resultType="hashmap">
		SELECT 
           AuthUser.ID           AS  id                  ,
           AuthUser.NAME         AS  name                ,
           AuthUser.STATUS       AS  status              ,
           AuthUser.TYPE         AS  type                ,
           AuthUser.TEL          AS  tel                 ,
           AuthUser.EMAIL        AS  email               ,
           AuthUser.SEX          AS  sex                 ,
           AuthUser.BIRTHDAY     AS  birthday            ,
           AuthUser.FAMILY_ADDR  AS  familyAddr          ,
           AuthUser.WORK_ADDR    AS  workAddr            ,
           AuthUser.WORK_TEL     AS  workTel             ,
           AuthUser.DESCRIPTION  AS  description         ,
           AuthUser.UPDATE_TIME  AS  updateTime          ,
           AuthUser.CREATE_TIME  AS  createTime          

		FROM AUTH_USER AuthUser

		<where>
			EMAIL = #{email,jdbcType=VARCHAR}
		</where>
	</select>
	<select id="countAuthUserByName" resultType="java.lang.Long">
		SELECT count(*)
		FROM AUTH_USER
		<where>
           NAME = #{vo.name,jdbcType=VARCHAR}                                                                        
           <if test="vo!=null and vo.id != null and vo.id != '' "> AND ID &lt;&gt; #{vo.id,jdbcType=VARCHAR}</if>      

		</where>
	</select>
	<select id="countAuthUserByEmail" resultType="java.lang.Long">
		SELECT count(*)
		FROM AUTH_USER
		<where>
           EMAIL = #{vo.email,jdbcType=VARCHAR}                                                                      
           <if test="vo!=null and vo.id != null and vo.id != '' "> AND ID &lt;&gt; #{vo.id,jdbcType=VARCHAR}</if>      

		</where>
	</select>
</mapper>
