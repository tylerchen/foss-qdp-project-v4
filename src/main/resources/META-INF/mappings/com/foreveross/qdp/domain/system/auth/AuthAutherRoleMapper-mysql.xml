<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="AuthAutherRole">
	<resultMap id="AuthAutherRole" type="com.foreveross.qdp.domain.system.auth.AuthAutherRole">
        <id     property="id"         column="ID"/>                       
        <result property="autherId"   column="AUTHER_ID"/>                
        <result property="roleId"     column="ROLE_ID"/>                  
        <result property="type"       column="TYPE"/>                     
        <result property="createTime" column="CREATE_TIME"/>              
        <result property="updateTime" column="UPDATE_TIME"/>              

	</resultMap>
	<sql id="orderBy">
		<if test="page !=null and page.orderBy!=null">
			<bind name="fieldColMap" value="#{
           'ID'          : 'ID'         ,
           'AUTHERID'    : 'AUTHER_ID'  ,
           'AUTHER_ID'   : 'AUTHER_ID'  ,
           'ROLEID'      : 'ROLE_ID'    ,
           'ROLE_ID'     : 'ROLE_ID'    ,
           'TYPE'        : 'TYPE'       ,
           'CREATETIME'  : 'CREATE_TIME',
           'CREATE_TIME' : 'CREATE_TIME',
           'UPDATETIME'  : 'UPDATE_TIME',
           'UPDATE_TIME' : 'UPDATE_TIME'

			}"/>
			<bind name="orderMap" value="#{'ASC':'ASC', 'DESC':'DESC'}"/>
			<trim prefix="order by " suffixOverrides=",">
				<foreach item="item" index="index" collection="page.orderBy" separator=",">
					<if test="item != null and item.name !=null and (fieldColMap[item.name.toUpperCase()] != null or orderMap[item.order.toUpperCase()]!=null)">${aliasDot}${fieldColMap[item.name.toUpperCase()]} ${orderMap[item.order.toUpperCase()]}</if>
				</foreach>
			</trim>
		</if>
	</sql>
	<select id="getAuthAutherRoleById" parameterType="com.foreveross.qdp.domain.system.auth.AuthAutherRole" resultMap="AuthAutherRole">
		SELECT * 
		FROM AUTH_AUTHER_ROLE
		<where>
				AND ID = #{id,jdbcType=VARCHAR}
		</where>
	</select>
	<select id="getAuthAutherRoleMapById" parameterType="com.foreveross.qdp.domain.system.auth.AuthAutherRole" resultType="hashmap">
		SELECT 
           AuthAutherRole.ID           AS  id                        ,
           AuthAutherRole.AUTHER_ID    AS  autherId                  ,
           AuthAutherRole.ROLE_ID      AS  roleId                    ,
           AuthAutherRole.TYPE         AS  type                      ,
           AuthAutherRole.CREATE_TIME  AS  createTime                ,
           AuthAutherRole.UPDATE_TIME  AS  updateTime                ,
           roleIdAuthRole.NAME         AS  roleIdName                

		FROM AUTH_AUTHER_ROLE AuthAutherRole
		LEFT JOIN AUTH_ROLE roleIdAuthRole ON AuthAutherRole.ROLE_ID = roleIdAuthRole.ID                                           

		<where>
				AND authAutherRole.ID = #{id,jdbcType=VARCHAR}
		</where>
	</select>
	<select id="pageFindAuthAutherRole" resultMap="AuthAutherRole">
		SELECT *
		FROM AUTH_AUTHER_ROLE
		<where>
           <if test="vo!=null and vo.id != null and vo.id != ''                 "> AND ID = #{vo.id,jdbcType=VARCHAR} </if>                            
           <if test="vo!=null and vo.autherId != null and vo.autherId != ''     "> AND AUTHER_ID LIKE CONCAT('%',#{vo.autherId,jdbcType=VARCHAR},'%') </if>
           <if test="vo!=null and vo.roleId != null and vo.roleId != ''         "> AND ROLE_ID LIKE CONCAT('%',#{vo.roleId,jdbcType=VARCHAR},'%') </if>
           <if test="vo!=null and vo.type != null and vo.type != ''             "> AND TYPE LIKE CONCAT('%',#{vo.type,jdbcType=VARCHAR},'%') </if>     
           <if test="vo!=null and vo.createTime != null and vo.createTime != '' "> AND CREATE_TIME = #{vo.createTime,jdbcType=VARCHAR} </if>           
           <if test="vo!=null and vo.updateTime != null and vo.updateTime != '' "> AND UPDATE_TIME = #{vo.updateTime,jdbcType=VARCHAR} </if>           

		</where>
		<bind name="aliasDot" value="''"/><include refid="orderBy"/>
	</select>
	<select id="pageFindAuthAutherRoleMap" resultType="hashmap">
		SELECT 
           AuthAutherRole.ID           AS  id                        ,
           AuthAutherRole.AUTHER_ID    AS  autherId                  ,
           AuthAutherRole.ROLE_ID      AS  roleId                    ,
           AuthAutherRole.TYPE         AS  type                      ,
           AuthAutherRole.CREATE_TIME  AS  createTime                ,
           AuthAutherRole.UPDATE_TIME  AS  updateTime                ,
           roleIdAuthRole.NAME         AS  roleIdName                

		FROM AUTH_AUTHER_ROLE AuthAutherRole
		LEFT JOIN AUTH_ROLE roleIdAuthRole ON AuthAutherRole.ROLE_ID = roleIdAuthRole.ID                                           

		<where>
           <if test="vo!=null and vo.id != null and vo.id != ''                 "> AND AuthAutherRole.ID = #{vo.id,jdbcType=VARCHAR} </if>             
           <if test="vo!=null and vo.autherId != null and vo.autherId != ''     "> AND AuthAutherRole.AUTHER_ID LIKE CONCAT('%',#{vo.autherId,jdbcType=VARCHAR},'%') </if>
           <if test="vo!=null and vo.roleId != null and vo.roleId != ''         "> AND AuthAutherRole.ROLE_ID LIKE CONCAT('%',#{vo.roleId,jdbcType=VARCHAR},'%') </if>
           <if test="vo!=null and vo.type != null and vo.type != ''             "> AND AuthAutherRole.TYPE LIKE CONCAT('%',#{vo.type,jdbcType=VARCHAR},'%') </if>
           <if test="vo!=null and vo.createTime != null and vo.createTime != '' "> AND AuthAutherRole.CREATE_TIME = #{vo.createTime,jdbcType=VARCHAR} </if>
           <if test="vo!=null and vo.updateTime != null and vo.updateTime != '' "> AND AuthAutherRole.UPDATE_TIME = #{vo.updateTime,jdbcType=VARCHAR} </if>

		</where>
		<bind name="aliasDot" value="'AuthAutherRole.'"/><include refid="orderBy"/>
	</select>
	<insert id="insertAuthAutherRole" parameterType="com.foreveross.qdp.domain.system.auth.AuthAutherRole"  useGeneratedKeys="true" keyProperty="id" >
		INSERT INTO AUTH_AUTHER_ROLE
			( ID, AUTHER_ID, ROLE_ID, TYPE, CREATE_TIME, UPDATE_TIME )
		VALUES
			(
           #{id,jdbcType=VARCHAR},
           #{autherId,jdbcType=VARCHAR},
           #{roleId,jdbcType=VARCHAR},
           #{type,jdbcType=VARCHAR},
           #{createTime,jdbcType=VARCHAR},
           #{updateTime,jdbcType=VARCHAR}

			)
	</insert>
	<update id="updateAuthAutherRole" parameterType="com.foreveross.qdp.domain.system.auth.AuthAutherRole">
		UPDATE AUTH_AUTHER_ROLE
		<set>
           <if test="id != null         "> ID = #{id,jdbcType=VARCHAR},</if>
           <if test="autherId != null   "> AUTHER_ID = #{autherId,jdbcType=VARCHAR},</if>
           <if test="roleId != null     "> ROLE_ID = #{roleId,jdbcType=VARCHAR},</if>
           <if test="type != null       "> TYPE = #{type,jdbcType=VARCHAR},</if>
           <if test="createTime != null "> CREATE_TIME = #{createTime,jdbcType=VARCHAR},</if>
           <if test="updateTime != null "> UPDATE_TIME = #{updateTime,jdbcType=VARCHAR},</if>

		</set>
		<where>
				AND ID = #{id,jdbcType=VARCHAR}
		</where>
	</update>
	<delete id="deleteAuthAutherRole" parameterType="com.foreveross.qdp.domain.system.auth.AuthAutherRole">
		DELETE FROM AUTH_AUTHER_ROLE
		<where>
				AND ID = #{id,jdbcType=VARCHAR}
		</where>
	</delete>
</mapper>
